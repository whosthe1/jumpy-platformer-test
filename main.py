class SpriteKindLegacy(Enum):
    Player = 0
    Projectile = 1
    Food = 2
    Enemy = 3
    Bumper = 4
    Goal = 5
    Coin = 6
    Flier = 7
class ActionKind(Enum):
    RunningLeft = 0
    RunningRight = 1
    Idle = 2
    IdleLeft = 3
    IdleRight = 4
    JumpingLeft = 5
    JumpingRight = 6
    CrouchLeft = 7
    CrouchRight = 8
    Flying = 9
    Walking = 10
    Jumping = 11
def initializeAnimations():
    initializeHeroAnimations()
    initializeCoinAnimation()
    initializeFlierAnimations()
def giveIntroduction():
    game.set_dialog_frame(img("""
        . 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
                2 2 1 1 1 1 1 1 1 1 1 1 1 2 2 . 
                2 1 1 2 2 2 2 2 2 2 2 2 1 1 2 . 
                2 1 2 2 1 1 1 1 1 1 1 2 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 1 1 1 1 1 1 1 1 1 2 1 2 . 
                2 1 2 2 1 1 1 1 1 1 1 2 2 1 2 . 
                2 1 1 2 2 2 2 2 2 2 2 2 1 1 2 . 
                2 2 1 1 1 1 1 1 1 1 1 1 1 2 2 . 
                . 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
                . . . . . . . . . . . . . . . .
    """))
    game.set_dialog_cursor(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . f f 5 5 5 5 f f . . . . 
                . . . . f 5 5 5 5 5 5 f . . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . . f 5 5 5 5 5 5 f . . . . 
                . . . . f f 5 5 5 5 f f . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    showInstruction("Move with the left and right buttons.")
    showInstruction("Jump with the up or A button.")
    showInstruction("Double jump by pressing jump again.")

def on_up_pressed():
    attemptJump()
controller.up.on_event(ControllerButtonEvent.PRESSED, on_up_pressed)

def on_overlap_player_coin(sprite, otherSprite):
    otherSprite.destroy(effects.trail, 250)
    otherSprite.y += -3
    info.change_score_by(3)
    music.ba_ding.play()
sprites.on_overlap(SpriteKindLegacy.Player,
    SpriteKindLegacy.Coin,
    on_overlap_player_coin)

def initializeCoinAnimation():
    global coinAnimation
    coinAnimation = animation.create_animation(ActionKind.Idle, 200)
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . f f 5 5 5 5 f f . . . . 
                . . . . f 5 5 5 5 5 5 f . . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . f 5 5 5 4 4 5 5 5 f . . . 
                . . . . f 5 5 5 5 5 5 f . . . . 
                . . . . f f 5 5 5 5 f f . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . f f f f f f . . . . . . 
                . . . f f 5 f 5 5 5 f . . . . . 
                . . . f 5 f 5 5 5 5 5 f . . . . 
                . . f 5 f 5 5 5 4 5 5 f . . . . 
                . . f 5 f 5 5 5 4 4 5 5 f . . . 
                . . f 5 f 5 5 5 4 4 5 5 f . . . 
                . . f 5 f 5 5 5 4 5 5 f . . . . 
                . . . f 5 f 5 5 5 5 5 f . . . . 
                . . . . f 5 f 5 5 5 f . . . . . 
                . . . . f f f f f f . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . f f f f f . . . . . . 
                . . . . f f 5 f 5 f f . . . . . 
                . . . f f 5 f 5 5 5 f . . . . . 
                . . . f 5 f 5 5 5 5 f f . . . . 
                . . . f 5 f 5 5 4 5 5 f . . . . 
                . . . f 5 f 5 5 4 5 5 f . . . . 
                . . . f 5 f 5 5 5 5 f f . . . . 
                . . . f f 5 f 5 5 5 f . . . . . 
                . . . . f f 5 f 5 f f . . . . . 
                . . . . . f f f f f . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . . f f f f f . . . . . . 
                . . . . . f 5 f 5 f f . . . . . 
                . . . . . f 5 f 5 5 f . . . . . 
                . . . . . f 5 f 5 5 f . . . . . 
                . . . . . f 5 f 5 5 f . . . . . 
                . . . . . f 5 f 5 5 f . . . . . 
                . . . . . f 5 f 5 f f . . . . . 
                . . . . . f f f f f . . . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . . . f f f f f . . . . . 
                . . . . . f f 5 f 5 f . . . . . 
                . . . . . f 5 5 f 5 f . . . . . 
                . . . . . f 5 5 f 5 f . . . . . 
                . . . . . f 5 5 f 5 f . . . . . 
                . . . . . f 5 5 f 5 f . . . . . 
                . . . . . f f 5 f 5 f . . . . . 
                . . . . . . f f f f f . . . . . 
                . . . . . . f f f f . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f f . . . . . 
                . . . . . f f 5 f 5 f f . . . . 
                . . . . . f 5 5 5 f 5 f f . . . 
                . . . . f f 5 5 5 5 f 5 f . . . 
                . . . . f 5 5 4 5 5 f 5 f . . . 
                . . . . f 5 5 4 5 5 f 5 f . . . 
                . . . . f f 5 5 5 5 f 5 f . . . 
                . . . . . f 5 5 5 f 5 f f . . . 
                . . . . . f f 5 f 5 f f . . . . 
                . . . . . . f f f f f . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    coinAnimation.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f f f . . . . 
                . . . . . f 5 5 5 f 5 f f . . . 
                . . . . f 5 5 5 5 5 f 5 f . . . 
                . . . . f 5 5 4 5 5 5 f 5 f . . 
                . . . f 5 5 4 4 5 5 5 f 5 f . . 
                . . . f 5 5 4 4 5 5 5 f 5 f . . 
                . . . . f 5 5 4 5 5 5 f 5 f . . 
                . . . . f 5 5 5 5 5 f 5 f . . . 
                . . . . . f 5 5 5 f 5 f . . . . 
                . . . . . . f f f f f f . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
def attemptJump():
    global doubleJumpSpeed, canDoubleJump
    # else if: either fell off a ledge, or double jumping
    if hero.is_hitting_tile(CollisionDirection.BOTTOM):
        hero.vy = -4 * pixelsToMeters
    elif canDoubleJump:
        doubleJumpSpeed = -3 * pixelsToMeters
        # Good double jump
        if hero.vy >= -40:
            doubleJumpSpeed = -4.5 * pixelsToMeters
            hero.start_effect(effects.trail, 500)
            scene.camera_shake(2, 250)
        hero.vy = doubleJumpSpeed
        canDoubleJump = False
def animateIdle():
    global mainIdleLeft, mainIdleRight
    mainIdleLeft = animation.create_animation(ActionKind.IdleLeft, 100)
    animation.attach_animation(hero, mainIdleLeft)
    mainIdleLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d d d d d d d d d e e d f . 
                . f d d f d d d d f d d e d f . 
                . f d d f d d d d f d d d e f . 
                . f d d f d d d d f d d d f . . 
                . f d d d d d d d d d d d f . . 
                . f a c c c c c c c c a b f . . 
                . f d d c c c c c c d d d f . . 
                . f d f f f b b f f f d d f . . 
                . . f a a a a a a a a a b f . . 
                . . . f a a b f f a a b f . . . 
                . . . f a a b f f a a b f . . . 
                . . . . f f f . . f f f . . . .
    """))
    mainIdleRight = animation.create_animation(ActionKind.IdleRight, 100)
    animation.attach_animation(hero, mainIdleRight)
    mainIdleRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d e e d d d d d d d d d f . 
                . f d e d d f d d d d f d d f . 
                . f e d d d f d d d d f d d f . 
                . . f d d d f d d d d f d d f . 
                . . f d d d d d d d d d d d f . 
                . . f b a c c c c c c c c a f . 
                . . f d d d c c c c c c d d f . 
                . . f d d f f f b b f f f d f . 
                . . f b a a a a a a a a a f . . 
                . . . f b a a f f b a a f . . . 
                . . . f b a a f f b a a f . . . 
                . . . . f f f . . f f f . . . .
    """))

def on_overlap_player_goal(sprite2, otherSprite2):
    global currentLevel
    info.change_life_by(1)
    currentLevel += 1
    if currentLevel < len(levelMaps):
        game.splash("Next level unlocked!")
        initializeLevel(currentLevel)
    else:
        game.over(True, effects.confetti)
sprites.on_overlap(SpriteKindLegacy.Player,
    SpriteKindLegacy.Goal,
    on_overlap_player_goal)

def initializeFlierAnimations():
    global flierFlying, flierIdle
    flierFlying = animation.create_animation(ActionKind.Flying, 100)
    flierFlying.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . f f f f f f f . . . . 
                . . . . f 4 4 4 4 4 4 4 f . . . 
                . . . f 4 5 5 4 4 4 5 5 4 f . . 
                . f . f 4 4 4 5 4 5 4 4 4 f . f 
                . f f 4 4 4 4 4 4 4 4 4 4 4 f f 
                . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                . f f 4 4 4 4 4 4 4 4 4 4 4 f f 
                . . . f 4 4 5 5 5 5 5 4 4 f . . 
                . . . . f 4 5 4 4 4 5 4 f . . . 
                . . . . . f f f f f f f . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    flierFlying.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . f f f f f f f . . . . 
                . . . . f 4 4 4 4 4 4 4 f . . . 
                . . . f 4 5 5 4 4 4 5 5 4 f . . 
                . . . f 4 4 4 5 4 5 4 4 4 f . . 
                . . f 4 4 4 4 4 4 4 4 4 4 4 f . 
                . . f 4 4 4 4 5 4 5 4 4 4 4 f . 
                . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                . f 4 4 4 4 4 4 4 4 4 4 4 4 4 f 
                . f 4 f 4 4 5 5 5 5 5 4 4 f 4 f 
                . f f . f 4 5 4 4 4 5 4 f . f f 
                . f . . . f f f f f f f . . . f 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))
    flierIdle = animation.create_animation(ActionKind.Idle, 100)
    flierFlying.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . f f f f f f f . . . . 
                . . . . f 4 4 4 4 4 4 4 f . . . 
                . . . f 4 5 5 4 4 4 5 5 4 f . . 
                . f . f 4 4 4 5 4 5 4 4 4 f . f 
                . f f 4 4 4 4 4 4 4 4 4 4 4 f f 
                . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                . f f 4 4 4 4 4 4 4 4 4 4 4 f f 
                . . . f 4 4 5 5 5 5 5 4 4 f . . 
                . . . . f 4 5 4 4 4 5 4 f . . . 
                . . . . . f f f f f f f . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . .
    """))

def on_a_pressed():
    attemptJump()
controller.A.on_event(ControllerButtonEvent.PRESSED, on_a_pressed)

def animateRun():
    global mainRunLeft, mainRunRight
    mainRunLeft = animation.create_animation(ActionKind.RunningLeft, 100)
    animation.attach_animation(hero, mainRunLeft)
    mainRunLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f . . . . . . 
                . . f e e e e e e e f . . . . . 
                . f e e e e e e e e e f . . . . 
                . f d d d d e d d e e f . . . . 
                . f d d f d d e d e e f . . . . 
                . f d d f d d d e e e f . . . . 
                . f d d f d d d d d d f . . . . 
                . f d d d d d d d d d f . . . . 
                . . f c c c a a c c b f . . . . 
                . . f c c d d d c c b f . . . . 
                . . f b f f d d f f f f . . . . 
                . . f a a a a a a a b f . . . . 
                . . . f a a a a b f f . . . . . 
                . . . f a a a a b f . . . . . . 
                . . . . f f f f f . . . . . . .
    """))
    mainRunLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . f f f f f f f . . . . . . 
                . . f e e e e e e e f . . . . . 
                . f e e e e e e e e e f . . . . 
                . f d d d d e d d e e f . . . . 
                . f d d f d d e d e e f . . . . 
                . f d d f d d d e e e f . . . . 
                . f d d f d d d d d d f . . . . 
                . f d d d d d d d d d f . . . . 
                . . f c c c c a a c b f . . . . 
                . . f c c c c d d c b f . . . . 
                . . f b f f d d d f f f f . . . 
                . . f a a a a a a a a b f f . . 
                . . . f a a b f f a a a f f . . 
                . . . . f f f . f f f f f . . .
    """))
    mainRunLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f . . . . . . 
                . . f e e e e e e e f . . . . . 
                . f e e e e e e e e e f . . . . 
                . f d d d d e d d e e f . . . . 
                . f d d f d d e d e e f . . . . 
                . f d d f d d d e e e f . . . . 
                . f d d f d d d d d d f . . . . 
                . f d d d d d d d d d f . . . . 
                . . f c c c a a c c b f . . . . 
                . . f c c d d d c c b f . . . . 
                . . f b f f d d f f f f . . . . 
                . . f a a a a a a a b f . . . . 
                . . . f a a a a b f f . . . . . 
                . . . f a a a a b f . . . . . . 
                . . . . f f f f f . . . . . . .
    """))
    mainRunLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . f f f f f f f . . . . . . 
                . . f e e e e e e e f . . . . . 
                . f e e e e e e e e e f . . . . 
                . f d d d d e d d e e f . . . . 
                . f d d f d d e d e e f . . . . 
                . f d d f d d d e e e f . . . . 
                . f d d f d d d d d d f . . . . 
                . f d d d d d d d d d f . . . . 
                . . f c a a c c c c b f . . . . 
                . f d d d b c c c c b f . . . . 
                f f f d d f f f f f f f . . . . 
                f f f a a a a a a a b f . . . . 
                . f a a b f a a b f f . . . . . 
                . f f f f . f f f . . . . . . .
    """))
    mainRunRight = animation.create_animation(ActionKind.RunningRight, 100)
    animation.attach_animation(hero, mainRunRight)
    mainRunRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . f f f f f f f . . . 
                . . . . . f e e e e e e e f . . 
                . . . . f e e e e e e e e e f . 
                . . . . f e e d d e d d d d f . 
                . . . . f e e d e d d f d d f . 
                . . . . f e e e d d d f d d f . 
                . . . . f d d d d d d f d d f . 
                . . . . f d d d d d d d d d f . 
                . . . . f b c c a a c c c f . . 
                . . . . f b c c d d d c c f . . 
                . . . . f f f f d d f f b f . . 
                . . . . f b a a a a a a a f . . 
                . . . . . f f b a a a a f . . . 
                . . . . . . f b a a a a f . . . 
                . . . . . . . f f f f f . . . .
    """))
    mainRunRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f f f f . . . 
                . . . . . f e e e e e e e f . . 
                . . . . f e e e e e e e e e f . 
                . . . . f e e d d e d d d d f . 
                . . . . f e e d e d d f d d f . 
                . . . . f e e e d d d f d d f . 
                . . . . f d d d d d d f d d f . 
                . . . . f d d d d d d d d d f . 
                . . . . f b c a a c c c c f . . 
                . . . . f b c d d c c c c f . . 
                . . . f f f f d d d f f b f . . 
                . . f f b a a a a a a a a f . . 
                . . f f a a a f f b a a f . . . 
                . . . f f f f . . f f f . . . .
    """))
    mainRunRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . f f f f f f f . . . 
                . . . . . f e e e e e e e f . . 
                . . . . f e e e e e e e e e f . 
                . . . . f e e d d e d d d d f . 
                . . . . f e e d e d d f d d f . 
                . . . . f e e e d d d f d d f . 
                . . . . f d d d d d d f d d f . 
                . . . . f d d d d d d d d d f . 
                . . . . f b c c a a c c c f . . 
                . . . . f b c c d d d c c f . . 
                . . . . f f f f d d f f b f . . 
                . . . . f b a a a a a a a f . . 
                . . . . . f f b a a a a f . . . 
                . . . . . . f b a a a a f . . . 
                . . . . . . . f f f f f . . . .
    """))
    mainRunRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . f f f f f f f . . . 
                . . . . . f e e e e e e e f . . 
                . . . . f e e e e e e e e e f . 
                . . . . f e e d d e d d d d f . 
                . . . . f e e d e d d f d d f . 
                . . . . f e e e d d d f d d f . 
                . . . . f d d d d d d f d d f . 
                . . . . f d d d d d d d d d f . 
                . . . . f b c c c c a a c f . . 
                . . . . f b c c c c b d d d f . 
                . . . . f f f f f f f d d f f f 
                . . . . f b a a a a a a a f f f 
                . . . . . f f b a a f b a a f . 
                . . . . . . . f f f . f f f . .
    """))
# Uncommented tiles are unused
def initializeScene():
    scene.set_background_image(img("""
        9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989998999899989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989998999899989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998999899989998999899989998999899989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                9989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989898999898989998989899989998999899989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999989999999899999998999999999999999999999999999999
                8989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989898989
                9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999
    """))
    # player spawn point
    scene.set_tile(1,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    # bumper spawn point
    scene.set_tile(2,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    # flier spawn point
    scene.set_tile(3,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(4,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    # coin spawn point
    scene.set_tile(5,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(6,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    # rock
    scene.set_tile(7,
        img("""
            f f f f f f f f f f f f f f f f 
                    f f 2 2 2 2 2 2 2 f 2 2 2 2 f f 
                    f 2 2 2 2 2 2 2 2 f 2 2 2 2 2 f 
                    f 2 2 2 2 2 2 2 2 f 2 2 2 2 2 f 
                    f 2 2 2 2 2 2 2 2 f 2 2 2 2 2 f 
                    f f f f f f f f f f f f f f f f 
                    f 2 2 2 2 f 2 2 2 2 2 2 2 2 2 f 
                    f 2 2 2 2 f 2 2 2 2 4 4 2 2 2 f 
                    f 2 2 2 2 f 2 2 2 4 4 2 2 2 2 f 
                    f 2 2 2 2 f 2 2 2 2 2 2 2 2 2 f 
                    f f f f f f f f f f f f f f f f 
                    f 2 2 2 2 2 2 2 2 f 2 2 2 2 2 f 
                    f 2 2 2 4 2 2 2 2 f 2 2 2 2 2 f 
                    f 2 2 4 2 2 2 2 2 f 2 2 2 2 2 f 
                    f f 2 2 2 2 2 2 2 f 2 2 2 2 f f 
                    f f f f f f f f f f f f f f f f
        """),
        True)
    scene.set_tile(8,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(9,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(10,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(11,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(12,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    scene.set_tile(13,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    # goal / flag spawn point
    scene.set_tile(14,
        img("""
            . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . . 
                    . . . . . . . . . . . . . . . .
        """),
        False)
    # ground1
    scene.set_tile(15,
        img("""
            f f f f f f f f f f f f f f f f 
                    6 7 7 7 7 3 5 3 7 6 7 2 7 6 7 7 
                    7 7 7 6 6 7 3 7 6 7 2 4 2 7 7 7 
                    7 7 6 6 6 6 6 7 6 6 7 2 6 6 7 7 
                    7 6 6 e e e 6 6 6 6 6 6 6 6 6 7 
                    6 6 e e d e e 6 e e 6 6 e e 6 6 
                    6 e e e e e e e e e e e e e e 6 
                    e e e e e d e e e d e e e e e e 
                    e e e e e e e e e e e e e e d e 
                    e e e e e e e e e e e e e e e e 
                    e e e e e e e e e e e e e e e e 
                    e e d e e e e e d e e e e e e e 
                    e e e e e e e e e e e e e e e e 
                    e e e e e e e e e e e e e e e d 
                    e e e e e e e e e e e e e e e e 
                    e d e e e e e e e d e e e e e e
        """),
        True)
def animateJumps():
    global mainJumpLeft, mainJumpRight
    # Because there isn't currently an easy way to say "play this animation a single time and stop at the end", this just adds a bunch of the same frame at the end to accomplish the same behavior
    mainJumpLeft = animation.create_animation(ActionKind.JumpingLeft, 100)
    animation.attach_animation(hero, mainJumpLeft)
    mainJumpLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d d d d d d d d d e e d f . 
                . f d d f d d d d f d d e d f . 
                . f d d f d d d d f d d d e f . 
                . f d d f d d d d f d d d f . . 
                . f d d d d d d d d d d d f . . 
                . f a c c c c c c c c a b f . . 
                . f d d c c c c c c d d d f . . 
                . f d f f f b b f f f d d f . . 
                . . f a a a a a a a a a b f . . 
                . . . f a a b f f a a b f . . . 
                . . . f a a b f f a a b f . . . 
                . . . . f f f . . f f f . . . .
    """))
    mainJumpLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d d d d d d d d d e e d f . 
                . f d d f d d d d f d d e d f . 
                . f d d f d d d d f d d d e f . 
                . f d d f d d d d f d d d f . . 
                . f d d d d d d d d d d d f . . 
                . f a c c c c c c c c a b f . . 
                . f d d c c c c c c d d d f . . 
                . f d f f f b b f f f d d f . . 
                . . f a a a a a a a a a b f . . 
                . . . f a a b f f a a b f . . . 
                . . . . f f f . . f f f . . . . 
                . . . . . . . . . . . . . . . .
    """))
    for index in range(30):
        mainJumpLeft.add_animation_frame(img("""
            . . . . . . . . . . . . . . . . 
                        . . . f f f f f f f f f f . . . 
                        . . f e e e e e e e e e e f . . 
                        . f e e e e e e e e e e e e f . 
                        . f d d d d d d d d d e e d f . 
                        . f d d f d d d d f d d e d f . 
                        . f d d f d d d d f d d d e f . 
                        . f d d f d d d d f d d d f . . 
                        . f d d d d d d d d d d d f f . 
                        . d a b c c c c c c c c b a d . 
                        . d a c c c c c c c c c c a d . 
                        . f f f f f b b f f f f f f f . 
                        . . f a a a a a a a a a b f . . 
                        . . . f a a b f f a a b f . . . 
                        . . . . f f f . . f f f . . . . 
                        . . . . . . . . . . . . . . . .
        """))
    mainJumpRight = animation.create_animation(ActionKind.JumpingRight, 100)
    animation.attach_animation(hero, mainJumpRight)
    mainJumpRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d e e d d d d d d d d d f . 
                . f d e d d f d d d d f d d f . 
                . f e d d d f d d d d f d d f . 
                . . f d d d f d d d d f d d f . 
                . . f d d d d d d d d d d d f . 
                . . f b a c c c c c c c c a f . 
                . . f d d d c c c c c c d d f . 
                . . f d d f f f b b f f f d f . 
                . . f b a a a a a a a a a f . . 
                . . . f b a a f f b a a f . . . 
                . . . f b a a f f b a a f . . . 
                . . . . f f f . . f f f . . . .
    """))
    mainJumpRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d e e d d d d d d d d d f . 
                . f d e d d f d d d d f d d f . 
                . f e d d d f d d d d f d d f . 
                . . f d d d f d d d d f d d f . 
                . . f d d d d d d d d d d d f . 
                . . f b a c c c c c c c c a f . 
                . . f d d d c c c c c c d d f . 
                . . f d d f f f b b f f f d f . 
                . . f b a a a a a a a a a f . . 
                . . . f b a a f f b a a f . . . 
                . . . . f f f . . f f f . . . . 
                . . . . . . . . . . . . . . . .
    """))
    for index2 in range(30):
        mainJumpRight.add_animation_frame(img("""
            . . . . . . . . . . . . . . . . 
                        . . . f f f f f f f f f f . . . 
                        . . f e e e e e e e e e e f . . 
                        . f e e e e e e e e e e e e f . 
                        . f d e e d d d d d d d d d f . 
                        . f d e d d f d d d d f d d f . 
                        . f e d d d f d d d d f d d f . 
                        . . f d d d f d d d d f d d f . 
                        . f f d d d d d d d d d d d f . 
                        . d a b c c c c c c c c b a d . 
                        . d a c c c c c c c c c c a d . 
                        . f f f f f f f b b f f f f f . 
                        . . f b a a a a a a a a a f . . 
                        . . . f b a a f f b a a f . . . 
                        . . . . f f f . . f f f . . . . 
                        . . . . . . . . . . . . . . . .
        """))
def animateCrouch():
    global mainCrouchLeft, mainCrouchRight
    mainCrouchLeft = animation.create_animation(ActionKind.CrouchLeft, 100)
    animation.attach_animation(hero, mainCrouchLeft)
    mainCrouchLeft.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d d d d d d d d d e e d f . 
                . f d d f d d d d f d d e d f . 
                . f d d f d d d d f d d d e f . 
                . f d d f d d d d f d d d f . . 
                . f d d d d d d d d d d d f . . 
                . f a c c c c c c c c a b f . . 
                . f d c c c c c c c c c d d f . 
                f d d f f f b b f f f f d d f . 
                . f f a a a a a a a a a b f . . 
                . . . f f f f . f f f f f . . .
    """))
    mainCrouchRight = animation.create_animation(ActionKind.CrouchRight, 100)
    animation.attach_animation(hero, mainCrouchRight)
    mainCrouchRight.add_animation_frame(img("""
        . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . f f f f f f f f f f . . . 
                . . f e e e e e e e e e e f . . 
                . f e e e e e e e e e e e e f . 
                . f d e e d d d d d d d d d f . 
                . f d e d d f d d d d f d d f . 
                . f e d d d f d d d d f d d f . 
                . . f d d d f d d d d f d d f . 
                . . f d d d d d d d d d d d f . 
                . . f b a c c c c c c c c a f . 
                . f d d c c c c c c c c c d f . 
                . f d d f f f f b b f f f d d f 
                . . f b a a a a a a a a a f f . 
                . . . f f f f f . f f f f . . .
    """))
def clearGame():
    for value4 in sprites.all_of_kind(SpriteKindLegacy.Bumper):
        value4.destroy()
    for value5 in sprites.all_of_kind(SpriteKindLegacy.Coin):
        value5.destroy()
    for value6 in sprites.all_of_kind(SpriteKindLegacy.Goal):
        value6.destroy()
    for value7 in sprites.all_of_kind(SpriteKindLegacy.Flier):
        value7.destroy()

def on_overlap_player_bumper(sprite3, otherSprite3):
    if sprite3.vy > 0 and not (sprite3.is_hitting_tile(CollisionDirection.BOTTOM)) or sprite3.y < otherSprite3.top:
        otherSprite3.destroy(effects.ashes, 250)
        otherSprite3.vy = -50
        info.change_score_by(1)
        music.power_up.play()
    else:
        info.change_life_by(-1)
        sprite3.say("Ow!", invincibilityPeriod)
        music.power_down.play()
    pause(invincibilityPeriod)
sprites.on_overlap(SpriteKindLegacy.Player,
    SpriteKindLegacy.Bumper,
    on_overlap_player_bumper)

def createEnemies():
    global bumper, flier
    # enemy that moves back and forth
    for value in scene.get_tiles_by_type(2):
        bumper = sprites.create(img("""
                . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . f f f f f f . . . . . . 
                            . . . f 7 2 7 7 7 2 f . . . . . 
                            . . f 7 7 7 2 7 2 7 7 f . . . . 
                            . . f 7 7 7 7 7 7 7 7 7 f . . . 
                            . f 7 7 7 2 7 7 7 2 7 7 f . . . 
                            . f 7 7 7 2 7 7 7 2 7 7 7 f . . 
                            . f 7 7 7 7 7 7 7 7 7 7 7 7 f . 
                            . f 7 7 7 7 2 2 2 7 7 7 7 7 f . 
                            . . f 7 7 2 2 7 2 2 7 7 7 7 f . 
                            . . f 7 7 2 7 7 7 2 2 7 7 7 f . 
                            . . . f 7 7 7 7 7 7 7 7 7 7 f . 
                            . . . . f f 7 7 7 7 7 7 7 f . . 
                            . . . . . . f f f f f f f . . . 
                            . . . . . . . . . . . . . . . .
            """),
            SpriteKindLegacy.Bumper)
        value.place(bumper)
        bumper.ay = gravity
        if Math.percent_chance(50):
            bumper.vx = randint(30, 60)
        else:
            bumper.vx = randint(-60, -30)
    # enemy that flies at player
    for value2 in scene.get_tiles_by_type(3):
        flier = sprites.create(img("""
                . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . f f f f f f f . . . . 
                            . . . . f 4 4 4 4 4 4 4 f . . . 
                            . . . f 4 5 5 4 4 4 5 5 4 f . . 
                            . f . f 4 4 4 5 4 5 4 4 4 f . f 
                            . f f 4 4 4 4 4 4 4 4 4 4 4 f f 
                            . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                            . f 4 4 4 4 4 5 4 5 4 4 4 4 4 f 
                            . f f 4 4 4 4 4 4 4 4 4 4 4 f f 
                            . . . f 4 4 5 5 5 5 5 4 4 f . . 
                            . . . . f 4 5 4 4 4 5 4 f . . . 
                            . . . . . f f f f f f f . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . .
            """),
            SpriteKindLegacy.Flier)
        value2.place(flier)
        animation.attach_animation(flier, flierFlying)
        animation.attach_animation(flier, flierIdle)

def on_down_pressed():
    if not (hero.is_hitting_tile(CollisionDirection.BOTTOM)):
        hero.vy += 80
controller.down.on_event(ControllerButtonEvent.PRESSED, on_down_pressed)

def showInstruction(text: str):
    game.show_long_text(text, DialogLayout.BOTTOM)
    music.ba_ding.play()
    info.change_score_by(1)

def on_overlap_player_flier(sprite4, otherSprite4):
    info.change_life_by(-1)
    sprite4.say("Ow!", invincibilityPeriod * 1.5)
    music.power_down.play()
    pause(invincibilityPeriod * 1.5)
sprites.on_overlap(SpriteKindLegacy.Player,
    SpriteKindLegacy.Flier,
    on_overlap_player_flier)

def initializeHeroAnimations():
    animateRun()
    animateIdle()
    animateCrouch()
    animateJumps()
def createPlayer(player2: Sprite):
    player2.ay = gravity
    scene.camera_follow_sprite(player2)
    controller.move_sprite(player2, 100, 0)
    player2.z = 5
    info.set_life(3)
    info.set_score(0)
def initializeLevel(level: number):
    clearGame()
    scene.set_tile_map(levelMaps[level])
    effects.clouds.start_screen_effect()
    scene.place_on_random_tile(hero, 1)
    createEnemies()
    spawnGoals()
def spawnGoals():
    global coin
    scene.place_on_random_tile(sprites.create(img("""
                . . . . . . . . . . . . . . . . 
                        . . . . . . . f f f f . . . . . 
                        . . . . . . f 2 2 2 2 f f . . . 
                        . . . . . . f 2 3 3 2 2 2 f . . 
                        . . . . . . f 2 3 2 2 2 2 2 f . 
                        . . . . . . f 3 2 2 2 2 2 f . . 
                        . . . . . . f 2 2 2 2 f f . . . 
                        . . . . . . f b d f f . . . . . 
                        . . . . . . f b d f . . . . . . 
                        . . . . . . f b d f . . . . . . 
                        . . . . . . f b d f . . . . . . 
                        . . . . . . f b d f . . . . . . 
                        . . . . . . f d d f . . . . . . 
                        . . . . . f f f f f f . . . . . 
                        . . . . f f f f f f f f . . . . 
                        . . . f f f f f f f f f f . . .
            """),
            SpriteKindLegacy.Goal),
        14)
    for value3 in scene.get_tiles_by_type(5):
        coin = sprites.create(img("""
                . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . . f f f f . . . . . . 
                            . . . . f f 5 5 5 5 f f . . . . 
                            . . . . f 5 5 5 5 5 5 f . . . . 
                            . . . f 5 5 5 4 4 5 5 5 f . . . 
                            . . . f 5 5 5 4 4 5 5 5 f . . . 
                            . . . f 5 5 5 4 4 5 5 5 f . . . 
                            . . . f 5 5 5 4 4 5 5 5 f . . . 
                            . . . . f 5 5 5 5 5 5 f . . . . 
                            . . . . f f 5 5 5 5 f f . . . . 
                            . . . . . . f f f f . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . . 
                            . . . . . . . . . . . . . . . .
            """),
            SpriteKindLegacy.Coin)
        value3.place(coin)
        animation.attach_animation(coin, coinAnimation)
        animation.set_action(coin, ActionKind.Idle)
heroFacingLeft = False
coin: Sprite = None
flier: Sprite = None
bumper: Sprite = None
mainCrouchRight: animation.Animation = None
mainCrouchLeft: animation.Animation = None
mainJumpRight: animation.Animation = None
mainJumpLeft: animation.Animation = None
mainRunRight: animation.Animation = None
mainRunLeft: animation.Animation = None
flierIdle: animation.Animation = None
flierFlying: animation.Animation = None
mainIdleRight: animation.Animation = None
mainIdleLeft: animation.Animation = None
doubleJumpSpeed = 0
canDoubleJump = False
coinAnimation: animation.Animation = None
currentLevel = 0
levelMaps: List[Image] = []
gravity = 0
pixelsToMeters = 0
invincibilityPeriod = 0
hero: Sprite = None
hero = sprites.create(img("""
        . . . . . . . . . . . . . . . . 
            . . . f f f f f f f f f f . . . 
            . . f e e e e e e e e e e f . . 
            . f e e e e e e e e e e e e f . 
            . f d e e d d d d d d d d d f . 
            . f d e d d f d d d d f d d f . 
            . f e d d d f d d d d f d d f . 
            . . f d d d f d d d d f d d f . 
            . . f d d d d d d d d d d d f . 
            . . f b a c c c c c c c c a f . 
            . . f d d d c c c c c c d d f . 
            . . f d d f f f b b f f f d f . 
            . . f b a a a a a a a a a f . . 
            . . . f b a a f f b a a f . . . 
            . . . f b a a f f b a a f . . . 
            . . . . f f f . . f f f . . . .
    """),
    SpriteKindLegacy.Player)
# how long to pause between each contact with a single enemy
invincibilityPeriod = 600
pixelsToMeters = 30
gravity = 9.81 * pixelsToMeters
levelMaps = [img("""
        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . 5 . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . 5 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . 1 . . . . . . . . . 5 . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . 7 . . 5 . 7 . . . . . . . . . . . . . . . . . 7 
            . . . . 7 . . . 7 . 2 . . 7 . . . 2 7 . 2 . . 2 . 7 . e . . . 7 
            f f f f 7 f f f 7 f f f f 7 f f f f 7 f f f f f f 7 f f f f f 7
    """),
    img("""
        . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . 7 . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . 7 5 7 . . . . . . . . . . 
            . . . . . . . 7 7 . 7 . . . . . . 7 . 7 5 7 . . . . . . . . . . 
            . . . . . . 7 7 7 . 7 . . . . 7 . 7 . 7 5 7 . . . . . . . . . . 
            7 . . . . 7 7 7 7 . 7 . . 7 . 7 5 7 5 7 5 7 . . . 5 5 5 5 5 5 5 
            7 1 . . . . . . 2 . 7 . . 7 . 2 . . . 2 5 7 . . . . . . . . e . 
            7 f f f f f f f f f 7 f f 7 f f f f f f f 7 f f f f f f f f f f
    """),
    img("""
        . . . . . . . . . . . . . . . . . . . 3 . . . . . . . . 3 3 3 3 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . 7 7 7 7 7 7 . . . . . . . . . . . . . . . . 
            . . . . . . . . 7 . 7 3 5 5 5 . . . . . . . . . . . . . . 5 5 5 
            . . . . . 7 . . 7 . 7 . 5 5 5 . . . . . . . . . . . . . . 5 5 5 
            . 1 . 7 . 7 . 2 2 . 7 . 5 5 5 . . . . . . . . . e . . . . 5 5 5 
            f f f 7 f 7 f f f f 7 f f f f f f f f f f f f f f f f f f f f f
    """),
    img("""
        . . . . . . . . . . . 7 . . . 3 . . . 3 . . 3 . 3 . . . . . . . 
            . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . 7 . . . 7 . . . . . . . . . . . . . . . . . . . . 
            . . . . . 7 . 7 . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 . 
            . . . 7 . . 5 . . 5 . 5 . . 5 . 5 . . 5 . 5 . . . 5 . . . 5 . . 
            . 1 7 7 e . . 2 . 2 . . . 2 . . . . . 2 . . . 2 . . . 2 . . . 7 
            f f f 7 f f f f f f f f f f f f f f f f f f f f f f f f f f f 7
    """),
    img("""
        . 3 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . . . . . . . . . 5 5 5 . . . . . 
            . . . . . 5 . 5 . . . . . 5 5 . . 7 7 7 7 . 7 . . . . . . . . . 
            . . . . . . . . . 5 5 5 . . . 5 7 5 5 5 5 . 7 . . . . . . . . . 
            . 1 . 7 2 2 2 2 2 2 7 2 2 2 2 2 7 2 2 2 2 2 7 . . . . . . e . . 
            f f f 7 f f f f f f 7 f f f f f 7 f f f f f 7 f f f f f f f f f
    """),
    img("""
        . 3 3 . . . . . . . . . . . . . . . . . 3 3 . . . . . . . . . . 
            . . . . . . . . . . . . 5 5 . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . 5 7 . . . . . . . . . . . . . . . . . . 
            . . . . . . . . . 5 5 . 7 7 . . . . . . . . 5 5 5 . . . . . . . 
            . . . . . 5 . 5 . 7 7 . . 5 5 . . 7 7 7 7 . . . . . . . . . . 7 
            7 . . . . 7 . 7 . 5 5 5 . . . 5 7 . . . . . . . . . . . . . . 7 
            7 1 . 7 . 7 5 7 2 . 7 2 . . . 7 7 . 2 . . 2 . . 2 . . . . e . 7 
            7 f f 7 f 7 f 7 f f 7 f f f f 7 7 f f f f f f f f f f f f f f 7
    """)]
initializeAnimations()
initializeScene()
createPlayer(hero)
initializeLevel(currentLevel)
giveIntroduction()
# set up hero animations

def on_on_update():
    global heroFacingLeft
    if hero.vx < 0:
        heroFacingLeft = True
    elif hero.vx > 0:
        heroFacingLeft = False
    if hero.is_hitting_tile(CollisionDirection.TOP):
        hero.vy = 0
    if controller.down.is_pressed():
        if heroFacingLeft:
            animation.set_action(hero, ActionKind.CrouchLeft)
        else:
            animation.set_action(hero, ActionKind.CrouchRight)
    elif hero.vy < 20 and hero.ay != 0:
        if heroFacingLeft:
            animation.set_action(hero, ActionKind.JumpingLeft)
        else:
            animation.set_action(hero, ActionKind.JumpingRight)
    elif hero.vx < 0:
        animation.set_action(hero, ActionKind.RunningLeft)
    elif hero.vx > 0:
        animation.set_action(hero, ActionKind.RunningRight)
    else:
        if heroFacingLeft:
            animation.set_action(hero, ActionKind.IdleLeft)
        else:
            animation.set_action(hero, ActionKind.IdleRight)
game.on_update(on_on_update)

# bumper movement

def on_on_update2():
    for value8 in sprites.all_of_kind(SpriteKindLegacy.Bumper):
        if value8.is_hitting_tile(CollisionDirection.LEFT):
            value8.vx = randint(30, 60)
        elif value8.is_hitting_tile(CollisionDirection.RIGHT):
            value8.vx = randint(-60, -30)
game.on_update(on_on_update2)

# Flier movement

def on_on_update3():
    for value9 in sprites.all_of_kind(SpriteKindLegacy.Flier):
        if abs(value9.x - hero.x) < 60:
            if value9.x - hero.x < -5:
                value9.vx = 25
            elif value9.x - hero.x > 5:
                value9.vx = -25
            if value9.y - hero.y < -5:
                value9.vy = 25
            elif value9.y - hero.y > 5:
                value9.vy = -25
            animation.set_action(value9, ActionKind.Flying)
        else:
            value9.vy = -20
            value9.vx = 0
            animation.set_action(value9, ActionKind.Idle)
game.on_update(on_on_update3)

# Reset double jump when standing on wall

def on_on_update4():
    global canDoubleJump
    if hero.is_hitting_tile(CollisionDirection.BOTTOM):
        hero.ay = 0
        canDoubleJump = True
    else:
        hero.ay = gravity
game.on_update(on_on_update4)
